{
    "sourceFile": "lib/widgets/password_field.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 49,
            "patches": [
                {
                    "date": 1672307185254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1672307323026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,19 +56,20 @@\n           enabledBorder: UnderlineInputBorder(\r\n             borderSide: const BorderSide(\r\n               color: AppColor.kSecondaryBgColor,\r\n             ),\r\n-            borderRadius: BorderRadius.circular(30.0),\r\n+            borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n           ),\r\n           filled: true,\r\n           fillColor: AppColor.kSecondaryBgColor,\r\n           focusedBorder: OutlineInputBorder(\r\n               borderSide: const BorderSide(color: AppColor.kSecondaryBgColor),\r\n-              borderRadius: BorderRadius.circular(30)),\r\n+              borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n           errorText: widget.validator != null ? null : widget.errorText,\r\n-          errorBorder: const OutlineInputBorder(\r\n-              borderSide: BorderSide(color: Colors.red),\r\n-              borderRadius: BorderRadius.all(Radius.circular(30))),\r\n+          errorBorder: OutlineInputBorder(\r\n+              borderSide: const BorderSide(color: Colors.red),\r\n+              borderRadius:\r\n+                  BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n           focusedErrorBorder: const OutlineInputBorder(\r\n               borderSide: BorderSide(color: Colors.red),\r\n               borderRadius: BorderRadius.all(Radius.circular(30))),\r\n           prefixIcon: const Icon(\r\n"
                },
                {
                    "date": 1672307343478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,11 +68,12 @@\n           errorBorder: OutlineInputBorder(\r\n               borderSide: const BorderSide(color: Colors.red),\r\n               borderRadius:\r\n                   BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n-          focusedErrorBorder: const OutlineInputBorder(\r\n-              borderSide: BorderSide(color: Colors.red),\r\n-              borderRadius: BorderRadius.all(Radius.circular(30))),\r\n+          focusedErrorBorder: OutlineInputBorder(\r\n+              borderSide: const BorderSide(color: Colors.red),\r\n+              borderRadius:\r\n+                  BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n           prefixIcon: const Icon(\r\n             Icons.lock,\r\n             color: Colors.black,\r\n           ),\r\n"
                },
                {
                    "date": 1672307440761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,8 +87,9 @@\n             // color: Colors.black,\r\n           ),\r\n           border: InputBorder.none,\r\n         ),\r\n+        style: TextStyle(fontSize: Dimensions.font20),\r\n       ),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1672307545622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,10 @@\n           focusedErrorBorder: OutlineInputBorder(\r\n               borderSide: const BorderSide(color: Colors.red),\r\n               borderRadius:\r\n                   BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n-          prefixIcon: const Icon(\r\n+          prefixIcon: Icon(\r\n+            size: Dimensions.inconSize24,\r\n             Icons.lock,\r\n             color: Colors.black,\r\n           ),\r\n           hintText: 'password',\r\n"
                },
                {
                    "date": 1672307588756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,10 +81,16 @@\n           hintText: 'password',\r\n           hintStyle: const TextStyle(fontFamily: 'OpenSans'),\r\n           suffixIcon: IconButton(\r\n             icon: isHidden\r\n-                ? const Icon(Icons.visibility_off)\r\n-                : const Icon(Icons.visibility),\r\n+                ? Icon(\r\n+                    Icons.visibility_off,\r\n+                    size: Dimensions.inconSize24,\r\n+                  )\r\n+                : Icon(\r\n+                    Icons.visibility,\r\n+                    size: Dimensions.inconSize24,\r\n+                  ),\r\n             onPressed: togglePasswordVisibility,\r\n             // color: Colors.black,\r\n           ),\r\n           border: InputBorder.none,\r\n"
                },
                {
                    "date": 1672307624767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n             // color: Colors.black,\r\n           ),\r\n           border: InputBorder.none,\r\n         ),\r\n-        style: TextStyle(fontSize: Dimensions.font20),\r\n+        style: TextStyle(fontSize: Dimensions.font17),\r\n       ),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1672307671193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,20 +79,23 @@\n             color: Colors.black,\r\n           ),\r\n           hintText: 'password',\r\n           hintStyle: const TextStyle(fontFamily: 'OpenSans'),\r\n-          suffixIcon: IconButton(\r\n-            icon: isHidden\r\n-                ? Icon(\r\n-                    Icons.visibility_off,\r\n-                    size: Dimensions.inconSize24,\r\n-                  )\r\n-                : Icon(\r\n-                    Icons.visibility,\r\n-                    size: Dimensions.inconSize24,\r\n-                  ),\r\n-            onPressed: togglePasswordVisibility,\r\n-            // color: Colors.black,\r\n+          suffixIcon: Padding(\r\n+            padding: const EdgeInsets.all(8.0),\r\n+            child: IconButton(\r\n+              icon: isHidden\r\n+                  ? Icon(\r\n+                      Icons.visibility_off,\r\n+                      size: Dimensions.inconSize24,\r\n+                    )\r\n+                  : Icon(\r\n+                      Icons.visibility,\r\n+                      size: Dimensions.inconSize24,\r\n+                    ),\r\n+              onPressed: togglePasswordVisibility,\r\n+              // color: Colors.black,\r\n+            ),\r\n           ),\r\n           border: InputBorder.none,\r\n         ),\r\n         style: TextStyle(fontSize: Dimensions.font17),\r\n"
                },
                {
                    "date": 1672307695843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,12 +72,15 @@\n           focusedErrorBorder: OutlineInputBorder(\r\n               borderSide: const BorderSide(color: Colors.red),\r\n               borderRadius:\r\n                   BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n-          prefixIcon: Icon(\r\n-            size: Dimensions.inconSize24,\r\n-            Icons.lock,\r\n-            color: Colors.black,\r\n+          prefixIcon: Padding(\r\n+            padding: const EdgeInsets.all(8.0),\r\n+            child: Icon(\r\n+              size: Dimensions.inconSize24,\r\n+              Icons.lock,\r\n+              color: Colors.black,\r\n+            ),\r\n           ),\r\n           hintText: 'password',\r\n           hintStyle: const TextStyle(fontFamily: 'OpenSans'),\r\n           suffixIcon: Padding(\r\n"
                },
                {
                    "date": 1672308088227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n               borderSide: const BorderSide(color: Colors.red),\r\n               borderRadius:\r\n                   BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n           prefixIcon: Padding(\r\n-            padding: const EdgeInsets.all(8.0),\r\n+            padding: EdgeInsets.all(Dimensions.height8),\r\n             child: Icon(\r\n               size: Dimensions.inconSize24,\r\n               Icons.lock,\r\n               color: Colors.black,\r\n@@ -83,9 +83,9 @@\n           ),\r\n           hintText: 'password',\r\n           hintStyle: const TextStyle(fontFamily: 'OpenSans'),\r\n           suffixIcon: Padding(\r\n-            padding: const EdgeInsets.all(8.0),\r\n+            padding: EdgeInsets.all(Dimensions.height8),\r\n             child: IconButton(\r\n               icon: isHidden\r\n                   ? Icon(\r\n                       Icons.visibility_off,\r\n"
                },
                {
                    "date": 1672308673203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,12 @@\n               color: Colors.black,\r\n             ),\r\n           ),\r\n           hintText: 'password',\r\n-          hintStyle: const TextStyle(fontFamily: 'OpenSans'),\r\n+          hintStyle: TextStyle(\r\n+            fontFamily: 'OpenSans',\r\n+            fontSize: Dimensions.font12,\r\n+          ),\r\n           suffixIcon: Padding(\r\n             padding: EdgeInsets.all(Dimensions.height8),\r\n             child: IconButton(\r\n               icon: isHidden\r\n"
                },
                {
                    "date": 1672308698403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,11 +81,10 @@\n               color: Colors.black,\r\n             ),\r\n           ),\r\n           hintText: 'password',\r\n-          hintStyle: TextStyle(\r\n+          hintStyle: const TextStyle(\r\n             fontFamily: 'OpenSans',\r\n-            fontSize: Dimensions.font12,\r\n           ),\r\n           suffixIcon: Padding(\r\n             padding: EdgeInsets.all(Dimensions.height8),\r\n             child: IconButton(\r\n"
                },
                {
                    "date": 1672311390211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,13 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     Size size = MediaQuery.of(context).size;\r\n-    return SizedBox(\r\n+    return Container(\r\n       width: size.width * 0.8,\r\n+      decoration: BoxDecoration(\r\n+        borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n+      ),\r\n       child: TextFormField(\r\n         cursorColor: Colors.black12,\r\n         obscureText: isHidden,\r\n         controller: widget.controller,\r\n"
                },
                {
                    "date": 1672311805276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,13 +33,13 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     Size size = MediaQuery.of(context).size;\r\n-    return Container(\r\n+    return SizedBox(\r\n       width: size.width * 0.8,\r\n-      decoration: BoxDecoration(\r\n-        borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n-      ),\r\n+      // decoration: BoxDecoration(\r\n+      //   borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n+      // ),\r\n       child: TextFormField(\r\n         cursorColor: Colors.black12,\r\n         obscureText: isHidden,\r\n         controller: widget.controller,\r\n"
                },
                {
                    "date": 1672311887715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,13 +33,13 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     Size size = MediaQuery.of(context).size;\r\n-    return SizedBox(\r\n+    return Container(\r\n       width: size.width * 0.8,\r\n-      // decoration: BoxDecoration(\r\n-      //   borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n-      // ),\r\n+      decoration: BoxDecoration(\r\n+        borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n+      ),\r\n       child: TextFormField(\r\n         cursorColor: Colors.black12,\r\n         obscureText: isHidden,\r\n         controller: widget.controller,\r\n"
                },
                {
                    "date": 1672311957021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n           // Return null if the entered password is valid\r\n           return null;\r\n         },\r\n         decoration: InputDecoration(\r\n-          contentPadding: EdgeInsets.symmetric(vertical: Dimensions.height20),\r\n+          contentPadding: const EdgeInsets.symmetric(vertical: 20),\r\n           enabledBorder: UnderlineInputBorder(\r\n             borderSide: const BorderSide(\r\n               color: AppColor.kSecondaryBgColor,\r\n             ),\r\n"
                },
                {
                    "date": 1672311978909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n           // Return null if the entered password is valid\r\n           return null;\r\n         },\r\n         decoration: InputDecoration(\r\n-          contentPadding: const EdgeInsets.symmetric(vertical: 20),\r\n+          contentPadding: const EdgeInsets.symmetric(vertical: 22),\r\n           enabledBorder: UnderlineInputBorder(\r\n             borderSide: const BorderSide(\r\n               color: AppColor.kSecondaryBgColor,\r\n             ),\r\n"
                },
                {
                    "date": 1672311992015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n           // Return null if the entered password is valid\r\n           return null;\r\n         },\r\n         decoration: InputDecoration(\r\n-          contentPadding: const EdgeInsets.symmetric(vertical: 22),\r\n+          contentPadding: const EdgeInsets.symmetric(vertical: 30),\r\n           enabledBorder: UnderlineInputBorder(\r\n             borderSide: const BorderSide(\r\n               color: AppColor.kSecondaryBgColor,\r\n             ),\r\n"
                },
                {
                    "date": 1672312019373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n           // Return null if the entered password is valid\r\n           return null;\r\n         },\r\n         decoration: InputDecoration(\r\n-          contentPadding: const EdgeInsets.symmetric(vertical: 30),\r\n+          contentPadding: const EdgeInsets.symmetric(vertical: 22),\r\n           enabledBorder: UnderlineInputBorder(\r\n             borderSide: const BorderSide(\r\n               color: AppColor.kSecondaryBgColor,\r\n             ),\r\n"
                },
                {
                    "date": 1672312097999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n           // Return null if the entered password is valid\r\n           return null;\r\n         },\r\n         decoration: InputDecoration(\r\n-          contentPadding: const EdgeInsets.symmetric(vertical: 22),\r\n+          contentPadding: EdgeInsets.symmetric(vertical: Dimensions.height22),\r\n           enabledBorder: UnderlineInputBorder(\r\n             borderSide: const BorderSide(\r\n               color: AppColor.kSecondaryBgColor,\r\n             ),\r\n"
                },
                {
                    "date": 1672312231506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,23 +87,20 @@\n           hintText: 'password',\r\n           hintStyle: const TextStyle(\r\n             fontFamily: 'OpenSans',\r\n           ),\r\n-          suffixIcon: Padding(\r\n-            padding: EdgeInsets.all(Dimensions.height8),\r\n-            child: IconButton(\r\n-              icon: isHidden\r\n-                  ? Icon(\r\n-                      Icons.visibility_off,\r\n-                      size: Dimensions.inconSize24,\r\n-                    )\r\n-                  : Icon(\r\n-                      Icons.visibility,\r\n-                      size: Dimensions.inconSize24,\r\n-                    ),\r\n-              onPressed: togglePasswordVisibility,\r\n-              // color: Colors.black,\r\n-            ),\r\n+          suffixIcon: IconButton(\r\n+            icon: isHidden\r\n+                ? Icon(\r\n+                    Icons.visibility_off,\r\n+                    size: Dimensions.inconSize24,\r\n+                  )\r\n+                : Icon(\r\n+                    Icons.visibility,\r\n+                    size: Dimensions.inconSize24,\r\n+                  ),\r\n+            onPressed: togglePasswordVisibility,\r\n+            // color: Colors.black,\r\n           ),\r\n           border: InputBorder.none,\r\n         ),\r\n         style: TextStyle(fontSize: Dimensions.font17),\r\n"
                },
                {
                    "date": 1672328192553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,9 @@\n           focusedBorder: OutlineInputBorder(\r\n               borderSide: const BorderSide(color: AppColor.kSecondaryBgColor),\r\n               borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n           errorText: widget.validator != null ? null : widget.errorText,\r\n+          \r\n           errorBorder: OutlineInputBorder(\r\n               borderSide: const BorderSide(color: Colors.red),\r\n               borderRadius:\r\n                   BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n"
                },
                {
                    "date": 1672422652130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n           focusedBorder: OutlineInputBorder(\r\n               borderSide: const BorderSide(color: AppColor.kSecondaryBgColor),\r\n               borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n           errorText: widget.validator != null ? null : widget.errorText,\r\n-          \r\n+          errorStyle: TextStyle(fontSize: Dimensions.font14),\r\n           errorBorder: OutlineInputBorder(\r\n               borderSide: const BorderSide(color: Colors.red),\r\n               borderRadius:\r\n                   BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n@@ -88,20 +88,23 @@\n           hintText: 'password',\r\n           hintStyle: const TextStyle(\r\n             fontFamily: 'OpenSans',\r\n           ),\r\n-          suffixIcon: IconButton(\r\n-            icon: isHidden\r\n-                ? Icon(\r\n-                    Icons.visibility_off,\r\n-                    size: Dimensions.inconSize24,\r\n-                  )\r\n-                : Icon(\r\n-                    Icons.visibility,\r\n-                    size: Dimensions.inconSize24,\r\n-                  ),\r\n-            onPressed: togglePasswordVisibility,\r\n-            // color: Colors.black,\r\n+          suffixIcon: Padding(\r\n+            padding: EdgeInsets.only(right: Dimensions.height8),\r\n+            child: IconButton(\r\n+              icon: isHidden\r\n+                  ? Icon(\r\n+                      Icons.visibility_off,\r\n+                      size: Dimensions.inconSize24,\r\n+                    )\r\n+                  : Icon(\r\n+                      Icons.visibility,\r\n+                      size: Dimensions.inconSize24,\r\n+                    ),\r\n+              onPressed: togglePasswordVisibility,\r\n+              // color: Colors.black,\r\n+            ),\r\n           ),\r\n           border: InputBorder.none,\r\n         ),\r\n         style: TextStyle(fontSize: Dimensions.font17),\r\n"
                },
                {
                    "date": 1672422767521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n           hintStyle: const TextStyle(\r\n             fontFamily: 'OpenSans',\r\n           ),\r\n           suffixIcon: Padding(\r\n-            padding: EdgeInsets.only(right: Dimensions.height8),\r\n+            padding: EdgeInsets.only(left: Dimensions.height8),\r\n             child: IconButton(\r\n               icon: isHidden\r\n                   ? Icon(\r\n                       Icons.visibility_off,\r\n"
                },
                {
                    "date": 1672423018509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n           hintStyle: const TextStyle(\r\n             fontFamily: 'OpenSans',\r\n           ),\r\n           suffixIcon: Padding(\r\n-            padding: EdgeInsets.only(left: Dimensions.height8),\r\n+            padding: EdgeInsets.only(left: Dimensions.height10),\r\n             child: IconButton(\r\n               icon: isHidden\r\n                   ? Icon(\r\n                       Icons.visibility_off,\r\n"
                },
                {
                    "date": 1672423046473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n           hintStyle: const TextStyle(\r\n             fontFamily: 'OpenSans',\r\n           ),\r\n           suffixIcon: Padding(\r\n-            padding: EdgeInsets.only(left: Dimensions.height10),\r\n+            padding: EdgeInsets.only(right: Dimensions.height8),\r\n             child: IconButton(\r\n               icon: isHidden\r\n                   ? Icon(\r\n                       Icons.visibility_off,\r\n"
                },
                {
                    "date": 1672423191826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n               borderSide: const BorderSide(color: Colors.red),\r\n               borderRadius:\r\n                   BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n           prefixIcon: Padding(\r\n-            padding: EdgeInsets.all(Dimensions.height8),\r\n+            padding: EdgeInsets.only(left: Dimensions.height8),\r\n             child: Icon(\r\n               size: Dimensions.inconSize24,\r\n               Icons.lock,\r\n               color: Colors.black,\r\n"
                },
                {
                    "date": 1673001001862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         decoration: InputDecoration(\r\n           contentPadding: EdgeInsets.symmetric(vertical: Dimensions.height22),\r\n           enabledBorder: UnderlineInputBorder(\r\n             borderSide: const BorderSide(\r\n-              color: AppColor.kSecondaryBgColor,\r\n+              color: AppColor.,\r\n             ),\r\n             borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n           ),\r\n           filled: true,\r\n"
                },
                {
                    "date": 1673001008670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,14 +57,14 @@\n         decoration: InputDecoration(\r\n           contentPadding: EdgeInsets.symmetric(vertical: Dimensions.height22),\r\n           enabledBorder: UnderlineInputBorder(\r\n             borderSide: const BorderSide(\r\n-              color: AppColor.,\r\n+              color: AppColor.bgFillColor,\r\n             ),\r\n             borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n           ),\r\n           filled: true,\r\n-          fillColor: AppColor.kSecondaryBgColor,\r\n+          fillColor: AppColor.bgFillColor,\r\n           focusedBorder: OutlineInputBorder(\r\n               borderSide: const BorderSide(color: AppColor.kSecondaryBgColor),\r\n               borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n           errorText: widget.validator != null ? null : widget.errorText,\r\n"
                },
                {
                    "date": 1673001016631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n           ),\r\n           filled: true,\r\n           fillColor: AppColor.bgFillColor,\r\n           focusedBorder: OutlineInputBorder(\r\n-              borderSide: const BorderSide(color: AppColor.kSecondaryBgColor),\r\n+              borderSide: const BorderSide(color: AppColor.bgFillColor),\r\n               borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n           errorText: widget.validator != null ? null : widget.errorText,\r\n           errorStyle: TextStyle(fontSize: Dimensions.font14),\r\n           errorBorder: OutlineInputBorder(\r\n"
                },
                {
                    "date": 1673001435415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,9 @@\n             ),\r\n           ),\r\n           border: InputBorder.none,\r\n         ),\r\n-        style: TextStyle(fontSize: Dimensions.font17),\r\n+        style: TextStyle(fontSize: Dimensions.font17, color: Colors.white),\r\n       ),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1673001450752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,9 @@\n             ),\r\n           ),\r\n           border: InputBorder.none,\r\n         ),\r\n-        style: TextStyle(fontSize: Dimensions.font17, color: Colors.white),\r\n+        style: TextStyle(fontSize: Dimensions.font17),\r\n       ),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1673001462875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,11 +85,10 @@\n               color: Colors.black,\r\n             ),\r\n           ),\r\n           hintText: 'password',\r\n-          hintStyle: const TextStyle(\r\n-            fontFamily: 'OpenSans',\r\n-          ),\r\n+          hintStyle:\r\n+              const TextStyle(fontFamily: 'OpenSans', color: Colors.white),\r\n           suffixIcon: Padding(\r\n             padding: EdgeInsets.only(right: Dimensions.height8),\r\n             child: IconButton(\r\n               icon: isHidden\r\n"
                },
                {
                    "date": 1673002541622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n           return null;\r\n         },\r\n         decoration: InputDecoration(\r\n           contentPadding: EdgeInsets.symmetric(vertical: Dimensions.height22),\r\n-          enabledBorder: UnderlineInputBorder(\r\n+          enabledBorder: OutlineInputBorder(\r\n             borderSide: const BorderSide(\r\n               color: AppColor.bgFillColor,\r\n             ),\r\n             borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n"
                },
                {
                    "date": 1673002550261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n           ),\r\n           filled: true,\r\n           fillColor: AppColor.bgFillColor,\r\n           focusedBorder: OutlineInputBorder(\r\n-              borderSide: const BorderSide(color: AppColor.bgFillColor),\r\n+              borderSide: const BorderSide(color: AppColor.kPrimaryColor),\r\n               borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n           errorText: widget.validator != null ? null : widget.errorText,\r\n           errorStyle: TextStyle(fontSize: Dimensions.font14),\r\n           errorBorder: OutlineInputBorder(\r\n"
                },
                {
                    "date": 1673002560433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,16 +57,16 @@\n         decoration: InputDecoration(\r\n           contentPadding: EdgeInsets.symmetric(vertical: Dimensions.height22),\r\n           enabledBorder: OutlineInputBorder(\r\n             borderSide: const BorderSide(\r\n-              color: AppColor.bgFillColor,\r\n+              color: AppColor.bgFillColor, width: \r\n             ),\r\n             borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n           ),\r\n           filled: true,\r\n           fillColor: AppColor.bgFillColor,\r\n           focusedBorder: OutlineInputBorder(\r\n-              borderSide: const BorderSide(color: AppColor.kPrimaryColor),\r\n+              borderSide: const BorderSide(color: AppColor.kPrimaryColor, width: 2),\r\n               borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n           errorText: widget.validator != null ? null : widget.errorText,\r\n           errorStyle: TextStyle(fontSize: Dimensions.font14),\r\n           errorBorder: OutlineInputBorder(\r\n"
                },
                {
                    "date": 1673002566691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,17 +56,16 @@\n         },\r\n         decoration: InputDecoration(\r\n           contentPadding: EdgeInsets.symmetric(vertical: Dimensions.height22),\r\n           enabledBorder: OutlineInputBorder(\r\n-            borderSide: const BorderSide(\r\n-              color: AppColor.bgFillColor, width: \r\n-            ),\r\n+            borderSide: const BorderSide(color: AppColor.bgFillColor, width: 2),\r\n             borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n           ),\r\n           filled: true,\r\n           fillColor: AppColor.bgFillColor,\r\n           focusedBorder: OutlineInputBorder(\r\n-              borderSide: const BorderSide(color: AppColor.kPrimaryColor, width: 2),\r\n+              borderSide:\r\n+                  const BorderSide(color: AppColor.kPrimaryColor, width: 2),\r\n               borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n           errorText: widget.validator != null ? null : widget.errorText,\r\n           errorStyle: TextStyle(fontSize: Dimensions.font14),\r\n           errorBorder: OutlineInputBorder(\r\n"
                },
                {
                    "date": 1673002626938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n             ),\r\n           ),\r\n           hintText: 'password',\r\n           hintStyle:\r\n-              const TextStyle(fontFamily: 'OpenSans', color: Colors.white),\r\n+              const TextStyle(fontFamily: 'OpenSans', color: ),\r\n           suffixIcon: Padding(\r\n             padding: EdgeInsets.only(right: Dimensions.height8),\r\n             child: IconButton(\r\n               icon: isHidden\r\n"
                },
                {
                    "date": 1673002633641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n             ),\r\n           ),\r\n           hintText: 'password',\r\n           hintStyle:\r\n-              const TextStyle(fontFamily: 'OpenSans', color: ),\r\n+              const TextStyle(fontFamily: 'OpenSans', color: AppColor.textColor),\r\n           suffixIcon: Padding(\r\n             padding: EdgeInsets.only(right: Dimensions.height8),\r\n             child: IconButton(\r\n               icon: isHidden\r\n"
                },
                {
                    "date": 1673005746830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,10 +84,10 @@\n               color: Colors.black,\r\n             ),\r\n           ),\r\n           hintText: 'password',\r\n-          hintStyle:\r\n-              const TextStyle(fontFamily: 'OpenSans', color: AppColor.textColor),\r\n+          hintStyle: const TextStyle(\r\n+              fontFamily: 'OpenSans', color: AppColor.textColor),\r\n           suffixIcon: Padding(\r\n             padding: EdgeInsets.only(right: Dimensions.height8),\r\n             child: IconButton(\r\n               icon: isHidden\r\n@@ -104,9 +104,9 @@\n             ),\r\n           ),\r\n           border: InputBorder.none,\r\n         ),\r\n-        style: TextStyle(fontSize: Dimensions.font17),\r\n+        style: TextStyle(fontSize: Dimensions.font17, ),\r\n       ),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1673005759481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n             ),\r\n           ),\r\n           border: InputBorder.none,\r\n         ),\r\n-        style: TextStyle(fontSize: Dimensions.font17, ),\r\n+        style: TextStyle(fontSize: Dimensions.font17, AppColor.textColor),\r\n       ),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1673005764814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n             ),\r\n           ),\r\n           border: InputBorder.none,\r\n         ),\r\n-        style: TextStyle(fontSize: Dimensions.font17, AppColor.textColor),\r\n+        style: TextStyle(fontSize: Dimensions.font17,Color: AppColor.textColor),\r\n       ),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1673005770409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,10 @@\n             ),\r\n           ),\r\n           border: InputBorder.none,\r\n         ),\r\n-        style: TextStyle(fontSize: Dimensions.font17,Color: AppColor.textColor),\r\n+        style:\r\n+            TextStyle(fontSize: Dimensions.font17, color: AppColor.textColor),\r\n       ),\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1673005814545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,8 +93,9 @@\n               icon: isHidden\r\n                   ? Icon(\r\n                       Icons.visibility_off,\r\n                       size: Dimensions.inconSize24,\r\n+                      color: color: AppColor.textColor,\r\n                     )\r\n                   : Icon(\r\n                       Icons.visibility,\r\n                       size: Dimensions.inconSize24,\r\n"
                },
                {
                    "date": 1673005820976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,114 @@\n+import 'package:flutter/material.dart';\r\n+import 'package:flutter/services.dart';\r\n+import 'package:foodex_app/utils/dimension.dart';\r\n+\r\n+import '../constant/constants.dart';\r\n+\r\n+class PasswordField extends StatefulWidget {\r\n+  const PasswordField(\r\n+      {Key? key,\r\n+      this.hintText,\r\n+      this.onChanged,\r\n+      this.validator,\r\n+      this.inputFormatter,\r\n+      this.errorText,\r\n+      this.controller})\r\n+      : super(key: key);\r\n+\r\n+  final String? hintText;\r\n+  final Function(String?)? onChanged;\r\n+  final String? Function(String?)? validator;\r\n+  final List<TextInputFormatter>? inputFormatter;\r\n+  final String? errorText;\r\n+  final controller;\r\n+\r\n+  @override\r\n+  State<PasswordField> createState() => _PasswordFieldState();\r\n+}\r\n+\r\n+class _PasswordFieldState extends State<PasswordField> {\r\n+  final TextEditingController controller = TextEditingController();\r\n+  bool isHidden = true;\r\n+  bool success = false;\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    Size size = MediaQuery.of(context).size;\r\n+    return Container(\r\n+      width: size.width * 0.8,\r\n+      decoration: BoxDecoration(\r\n+        borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n+      ),\r\n+      child: TextFormField(\r\n+        cursorColor: Colors.black12,\r\n+        obscureText: isHidden,\r\n+        controller: widget.controller,\r\n+        keyboardType: TextInputType.visiblePassword,\r\n+        validator: (value) {\r\n+          if (value == null || value.trim().isEmpty) {\r\n+            return 'Enter valid password';\r\n+          }\r\n+          if (value.trim().length < 8) {\r\n+            return 'Password must be at least 8 characters in length';\r\n+          }\r\n+          // Return null if the entered password is valid\r\n+          return null;\r\n+        },\r\n+        decoration: InputDecoration(\r\n+          contentPadding: EdgeInsets.symmetric(vertical: Dimensions.height22),\r\n+          enabledBorder: OutlineInputBorder(\r\n+            borderSide: const BorderSide(color: AppColor.bgFillColor, width: 2),\r\n+            borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n+          ),\r\n+          filled: true,\r\n+          fillColor: AppColor.bgFillColor,\r\n+          focusedBorder: OutlineInputBorder(\r\n+              borderSide:\r\n+                  const BorderSide(color: AppColor.kPrimaryColor, width: 2),\r\n+              borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n+          errorText: widget.validator != null ? null : widget.errorText,\r\n+          errorStyle: TextStyle(fontSize: Dimensions.font14),\r\n+          errorBorder: OutlineInputBorder(\r\n+              borderSide: const BorderSide(color: Colors.red),\r\n+              borderRadius:\r\n+                  BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n+          focusedErrorBorder: OutlineInputBorder(\r\n+              borderSide: const BorderSide(color: Colors.red),\r\n+              borderRadius:\r\n+                  BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n+          prefixIcon: Padding(\r\n+            padding: EdgeInsets.only(left: Dimensions.height8),\r\n+            child: Icon(\r\n+              size: Dimensions.inconSize24,\r\n+              Icons.lock,\r\n+              color: Colors.black,\r\n+            ),\r\n+          ),\r\n+          hintText: 'password',\r\n+          hintStyle: const TextStyle(\r\n+              fontFamily: 'OpenSans', color: AppColor.textColor),\r\n+          suffixIcon: Padding(\r\n+            padding: EdgeInsets.only(right: Dimensions.height8),\r\n+            child: IconButton(\r\n+              icon: isHidden\r\n+                  ? Icon(\r\n+                      Icons.visibility_off,\r\n+                      size: Dimensions.inconSize24,\r\n+                      color: AppColor.textColor,\r\n+                    )\r\n+                  : Icon(Icons.visibility,\r\n+                      size: Dimensions.inconSize24, color: AppColor.textColor),\r\n+              onPressed: togglePasswordVisibility,\r\n+              // color: Colors.black,\r\n+            ),\r\n+          ),\r\n+          border: InputBorder.none,\r\n+        ),\r\n+        style:\r\n+            TextStyle(fontSize: Dimensions.font17, color: AppColor.textColor),\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+  void togglePasswordVisibility() => setState(() => isHidden = !isHidden);\r\n+}\r\n"
                },
                {
                    "date": 1673007593712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import 'package:flutter/material.dart';\r\n import 'package:flutter/services.dart';\r\n import 'package:foodex_app/utils/dimension.dart';\r\n \r\n-import '../constant/constants.dart';\r\n+import '../utils/theme/constants.dart';\r\n \r\n class PasswordField extends StatefulWidget {\r\n   const PasswordField(\r\n       {Key? key,\r\n@@ -111,120 +111,4 @@\n   }\r\n \r\n   void togglePasswordVisibility() => setState(() => isHidden = !isHidden);\r\n }\r\n-import 'package:flutter/material.dart';\r\n-import 'package:flutter/services.dart';\r\n-import 'package:foodex_app/utils/dimension.dart';\r\n-\r\n-import '../constant/constants.dart';\r\n-\r\n-class PasswordField extends StatefulWidget {\r\n-  const PasswordField(\r\n-      {Key? key,\r\n-      this.hintText,\r\n-      this.onChanged,\r\n-      this.validator,\r\n-      this.inputFormatter,\r\n-      this.errorText,\r\n-      this.controller})\r\n-      : super(key: key);\r\n-\r\n-  final String? hintText;\r\n-  final Function(String?)? onChanged;\r\n-  final String? Function(String?)? validator;\r\n-  final List<TextInputFormatter>? inputFormatter;\r\n-  final String? errorText;\r\n-  final controller;\r\n-\r\n-  @override\r\n-  State<PasswordField> createState() => _PasswordFieldState();\r\n-}\r\n-\r\n-class _PasswordFieldState extends State<PasswordField> {\r\n-  final TextEditingController controller = TextEditingController();\r\n-  bool isHidden = true;\r\n-  bool success = false;\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    Size size = MediaQuery.of(context).size;\r\n-    return Container(\r\n-      width: size.width * 0.8,\r\n-      decoration: BoxDecoration(\r\n-        borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n-      ),\r\n-      child: TextFormField(\r\n-        cursorColor: Colors.black12,\r\n-        obscureText: isHidden,\r\n-        controller: widget.controller,\r\n-        keyboardType: TextInputType.visiblePassword,\r\n-        validator: (value) {\r\n-          if (value == null || value.trim().isEmpty) {\r\n-            return 'Enter valid password';\r\n-          }\r\n-          if (value.trim().length < 8) {\r\n-            return 'Password must be at least 8 characters in length';\r\n-          }\r\n-          // Return null if the entered password is valid\r\n-          return null;\r\n-        },\r\n-        decoration: InputDecoration(\r\n-          contentPadding: EdgeInsets.symmetric(vertical: Dimensions.height22),\r\n-          enabledBorder: OutlineInputBorder(\r\n-            borderSide: const BorderSide(color: AppColor.bgFillColor, width: 2),\r\n-            borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n-          ),\r\n-          filled: true,\r\n-          fillColor: AppColor.bgFillColor,\r\n-          focusedBorder: OutlineInputBorder(\r\n-              borderSide:\r\n-                  const BorderSide(color: AppColor.kPrimaryColor, width: 2),\r\n-              borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n-          errorText: widget.validator != null ? null : widget.errorText,\r\n-          errorStyle: TextStyle(fontSize: Dimensions.font14),\r\n-          errorBorder: OutlineInputBorder(\r\n-              borderSide: const BorderSide(color: Colors.red),\r\n-              borderRadius:\r\n-                  BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n-          focusedErrorBorder: OutlineInputBorder(\r\n-              borderSide: const BorderSide(color: Colors.red),\r\n-              borderRadius:\r\n-                  BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n-          prefixIcon: Padding(\r\n-            padding: EdgeInsets.only(left: Dimensions.height8),\r\n-            child: Icon(\r\n-              size: Dimensions.inconSize24,\r\n-              Icons.lock,\r\n-              color: Colors.black,\r\n-            ),\r\n-          ),\r\n-          hintText: 'password',\r\n-          hintStyle: const TextStyle(\r\n-              fontFamily: 'OpenSans', color: AppColor.textColor),\r\n-          suffixIcon: Padding(\r\n-            padding: EdgeInsets.only(right: Dimensions.height8),\r\n-            child: IconButton(\r\n-              icon: isHidden\r\n-                  ? Icon(\r\n-                      Icons.visibility_off,\r\n-                      size: Dimensions.inconSize24,\r\n-                      color: color: AppColor.textColor,\r\n-                    )\r\n-                  : Icon(\r\n-                      Icons.visibility,\r\n-                      size: Dimensions.inconSize24,\r\n-                    ),\r\n-              onPressed: togglePasswordVisibility,\r\n-              // color: Colors.black,\r\n-            ),\r\n-          ),\r\n-          border: InputBorder.none,\r\n-        ),\r\n-        style:\r\n-            TextStyle(fontSize: Dimensions.font17, color: AppColor.textColor),\r\n-      ),\r\n-    );\r\n-  }\r\n-\r\n-  void togglePasswordVisibility() => setState(() => isHidden = !isHidden);\r\n-}\r\n"
                },
                {
                    "date": 1674141891142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n                   BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n           prefixIcon: Padding(\r\n             padding: EdgeInsets.only(left: Dimensions.height8),\r\n             child: Icon(\r\n-              size: Dimensions.inconSize24,\r\n+              size: Dimensions.iconSize24,\r\n               Icons.lock,\r\n               color: Colors.black,\r\n             ),\r\n           ),\r\n@@ -92,13 +92,13 @@\n             child: IconButton(\r\n               icon: isHidden\r\n                   ? Icon(\r\n                       Icons.visibility_off,\r\n-                      size: Dimensions.inconSize24,\r\n+                      size: Dimensions.iconSize24,\r\n                       color: AppColor.textColor,\r\n                     )\r\n                   : Icon(Icons.visibility,\r\n-                      size: Dimensions.inconSize24, color: AppColor.textColor),\r\n+                      size: Dimensions.iconSize24, color: AppColor.textColor),\r\n               onPressed: togglePasswordVisibility,\r\n               // color: Colors.black,\r\n             ),\r\n           ),\r\n"
                },
                {
                    "date": 1675078361063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import 'package:flutter/material.dart';\r\n import 'package:flutter/services.dart';\r\n import 'package:foodex_app/utils/dimension.dart';\r\n \r\n-import '../utils/theme/constants.dart';\r\n+import '../app/theme/constants.dart';\r\n \r\n class PasswordField extends StatefulWidget {\r\n   const PasswordField(\r\n       {Key? key,\r\n"
                },
                {
                    "date": 1675078400211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import 'package:flutter/material.dart';\r\n import 'package:flutter/services.dart';\r\n-import 'package:foodex_app/utils/dimension.dart';\r\n+import 'package:foodex_app/app/utils/dimension.dart';\r\n \r\n import '../app/theme/constants.dart';\r\n \r\n class PasswordField extends StatefulWidget {\r\n"
                },
                {
                    "date": 1676024965003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,29 @@\n import 'package:flutter/material.dart';\r\n-import 'package:flutter/services.dart';\r\n+import 'package:foodex_app/app/theme/constants.dart';\r\n import 'package:foodex_app/app/utils/dimension.dart';\r\n \r\n-import '../app/theme/constants.dart';\r\n-\r\n-class PasswordField extends StatefulWidget {\r\n-  const PasswordField(\r\n-      {Key? key,\r\n-      this.hintText,\r\n-      this.onChanged,\r\n-      this.validator,\r\n-      this.inputFormatter,\r\n-      this.errorText,\r\n-      this.controller})\r\n-      : super(key: key);\r\n-\r\n+class UserInputField extends StatefulWidget {\r\n+  const UserInputField({\r\n+    Key? key,\r\n+    this.hintText,\r\n+    // this.icon = Icons.person,\r\n+    this.prefixIcon,\r\n+    this.validator,\r\n+    this.errorText,\r\n+    this.controller,\r\n+  }) : super(key: key);\r\n   final String? hintText;\r\n-  final Function(String?)? onChanged;\r\n+  final IconData? prefixIcon;\r\n   final String? Function(String?)? validator;\r\n-  final List<TextInputFormatter>? inputFormatter;\r\n   final String? errorText;\r\n   final controller;\r\n \r\n   @override\r\n-  State<PasswordField> createState() => _PasswordFieldState();\r\n+  State<UserInputField> createState() => _UserInputFieldState();\r\n }\r\n \r\n-class _PasswordFieldState extends State<PasswordField> {\r\n-  final TextEditingController controller = TextEditingController();\r\n-  bool isHidden = true;\r\n-  bool success = false;\r\n-\r\n+class _UserInputFieldState extends State<UserInputField> {\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     Size size = MediaQuery.of(context).size;\r\n     return Container(\r\n@@ -40,75 +32,48 @@\n         borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n       ),\r\n       child: TextFormField(\r\n         cursorColor: Colors.black12,\r\n-        obscureText: isHidden,\r\n+        validator: widget.validator,\r\n         controller: widget.controller,\r\n-        keyboardType: TextInputType.visiblePassword,\r\n-        validator: (value) {\r\n-          if (value == null || value.trim().isEmpty) {\r\n-            return 'Enter valid password';\r\n-          }\r\n-          if (value.trim().length < 8) {\r\n-            return 'Password must be at least 8 characters in length';\r\n-          }\r\n-          // Return null if the entered password is valid\r\n-          return null;\r\n-        },\r\n         decoration: InputDecoration(\r\n-          contentPadding: EdgeInsets.symmetric(vertical: Dimensions.height22),\r\n-          enabledBorder: OutlineInputBorder(\r\n-            borderSide: const BorderSide(color: AppColor.bgFillColor, width: 2),\r\n-            borderRadius: BorderRadius.circular(Dimensions.radius30),\r\n-          ),\r\n-          filled: true,\r\n-          fillColor: AppColor.bgFillColor,\r\n-          focusedBorder: OutlineInputBorder(\r\n-              borderSide:\r\n-                  const BorderSide(color: AppColor.kPrimaryColor, width: 2),\r\n-              borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n-          errorText: widget.validator != null ? null : widget.errorText,\r\n-          errorStyle: TextStyle(fontSize: Dimensions.font14),\r\n-          errorBorder: OutlineInputBorder(\r\n-              borderSide: const BorderSide(color: Colors.red),\r\n-              borderRadius:\r\n-                  BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n-          focusedErrorBorder: OutlineInputBorder(\r\n-              borderSide: const BorderSide(color: Colors.red),\r\n-              borderRadius:\r\n-                  BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n-          prefixIcon: Padding(\r\n-            padding: EdgeInsets.only(left: Dimensions.height8),\r\n-            child: Icon(\r\n-              size: Dimensions.iconSize24,\r\n-              Icons.lock,\r\n-              color: Colors.black,\r\n-            ),\r\n-          ),\r\n-          hintText: 'password',\r\n-          hintStyle: const TextStyle(\r\n-              fontFamily: 'OpenSans', color: AppColor.textColor),\r\n-          suffixIcon: Padding(\r\n-            padding: EdgeInsets.only(right: Dimensions.height8),\r\n-            child: IconButton(\r\n-              icon: isHidden\r\n-                  ? Icon(\r\n-                      Icons.visibility_off,\r\n-                      size: Dimensions.iconSize24,\r\n-                      color: AppColor.textColor,\r\n-                    )\r\n-                  : Icon(Icons.visibility,\r\n-                      size: Dimensions.iconSize24, color: AppColor.textColor),\r\n-              onPressed: togglePasswordVisibility,\r\n-              // color: Colors.black,\r\n-            ),\r\n-          ),\r\n-          border: InputBorder.none,\r\n-        ),\r\n+            contentPadding: EdgeInsets.symmetric(vertical: Dimensions.height22),\r\n+            hintText: widget.hintText,\r\n+            hintStyle: const TextStyle(\r\n+                fontFamily: 'OpenSans', color: AppColor.textColor),\r\n+            enabledBorder: OutlineInputBorder(\r\n+                borderSide:\r\n+                    const BorderSide(color: AppColor.bgFillColor, width: 2),\r\n+                borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n+            filled: true,\r\n+            fillColor: AppColor.bgFillColor,\r\n+            focusedBorder: OutlineInputBorder(\r\n+                borderSide:\r\n+                    const BorderSide(color: AppColor.kPrimaryColor, width: 2),\r\n+                borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n+            errorText: widget.validator != null ? null : widget.errorText,\r\n+            errorStyle: TextStyle(fontSize: Dimensions.font14),\r\n+            errorBorder: OutlineInputBorder(\r\n+                borderSide: const BorderSide(color: Colors.red),\r\n+                borderRadius:\r\n+                    BorderRadius.all(Radius.circular(Dimensions.radius30))),\r\n+            focusedErrorBorder: OutlineInputBorder(\r\n+                borderSide: const BorderSide(color: Colors.red),\r\n+                borderRadius: BorderRadius.circular(Dimensions.radius30)),\r\n+            prefixIcon: null == widget.prefixIcon\r\n+                ? null\r\n+                : Padding(\r\n+                    padding: EdgeInsets.only(left: Dimensions.height8),\r\n+                    child: Icon(\r\n+                        size: Dimensions.iconSize24,\r\n+                        widget.prefixIcon,\r\n+                        color: AppColor.textColor\r\n+                        // size:Dimensions.icon20,\r\n+                        ),\r\n+                  ),\r\n+            border: InputBorder.none),\r\n         style:\r\n             TextStyle(fontSize: Dimensions.font17, color: AppColor.textColor),\r\n       ),\r\n     );\r\n   }\r\n-\r\n-  void togglePasswordVisibility() => setState(() => isHidden = !isHidden);\r\n }\r\n"
                }
            ],
            "date": 1672307185254,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:flutter/services.dart';\r\nimport 'package:foodex_app/utils/dimension.dart';\r\n\r\nimport '../constant/constants.dart';\r\n\r\nclass PasswordField extends StatefulWidget {\r\n  const PasswordField(\r\n      {Key? key,\r\n      this.hintText,\r\n      this.onChanged,\r\n      this.validator,\r\n      this.inputFormatter,\r\n      this.errorText,\r\n      this.controller})\r\n      : super(key: key);\r\n\r\n  final String? hintText;\r\n  final Function(String?)? onChanged;\r\n  final String? Function(String?)? validator;\r\n  final List<TextInputFormatter>? inputFormatter;\r\n  final String? errorText;\r\n  final controller;\r\n\r\n  @override\r\n  State<PasswordField> createState() => _PasswordFieldState();\r\n}\r\n\r\nclass _PasswordFieldState extends State<PasswordField> {\r\n  final TextEditingController controller = TextEditingController();\r\n  bool isHidden = true;\r\n  bool success = false;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    Size size = MediaQuery.of(context).size;\r\n    return SizedBox(\r\n      width: size.width * 0.8,\r\n      child: TextFormField(\r\n        cursorColor: Colors.black12,\r\n        obscureText: isHidden,\r\n        controller: widget.controller,\r\n        keyboardType: TextInputType.visiblePassword,\r\n        validator: (value) {\r\n          if (value == null || value.trim().isEmpty) {\r\n            return 'Enter valid password';\r\n          }\r\n          if (value.trim().length < 8) {\r\n            return 'Password must be at least 8 characters in length';\r\n          }\r\n          // Return null if the entered password is valid\r\n          return null;\r\n        },\r\n        decoration: InputDecoration(\r\n          contentPadding: EdgeInsets.symmetric(vertical: Dimensions.height20),\r\n          enabledBorder: UnderlineInputBorder(\r\n            borderSide: const BorderSide(\r\n              color: AppColor.kSecondaryBgColor,\r\n            ),\r\n            borderRadius: BorderRadius.circular(30.0),\r\n          ),\r\n          filled: true,\r\n          fillColor: AppColor.kSecondaryBgColor,\r\n          focusedBorder: OutlineInputBorder(\r\n              borderSide: const BorderSide(color: AppColor.kSecondaryBgColor),\r\n              borderRadius: BorderRadius.circular(30)),\r\n          errorText: widget.validator != null ? null : widget.errorText,\r\n          errorBorder: const OutlineInputBorder(\r\n              borderSide: BorderSide(color: Colors.red),\r\n              borderRadius: BorderRadius.all(Radius.circular(30))),\r\n          focusedErrorBorder: const OutlineInputBorder(\r\n              borderSide: BorderSide(color: Colors.red),\r\n              borderRadius: BorderRadius.all(Radius.circular(30))),\r\n          prefixIcon: const Icon(\r\n            Icons.lock,\r\n            color: Colors.black,\r\n          ),\r\n          hintText: 'password',\r\n          hintStyle: const TextStyle(fontFamily: 'OpenSans'),\r\n          suffixIcon: IconButton(\r\n            icon: isHidden\r\n                ? const Icon(Icons.visibility_off)\r\n                : const Icon(Icons.visibility),\r\n            onPressed: togglePasswordVisibility,\r\n            // color: Colors.black,\r\n          ),\r\n          border: InputBorder.none,\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  void togglePasswordVisibility() => setState(() => isHidden = !isHidden);\r\n}\r\n"
        }
    ]
}