{
    "sourceFile": "lib/screen/food/category/category.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1675874039116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1675874044670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,6 @@\n-import 'package:animate_do/animate_do.dart';\r\n-import 'package:flutter/material.dart';\r\n-import 'package:gypsy/model/product.dart';\r\n-import 'package:gypsy/repository/product_repository.dart';\r\n-import 'package:gypsy/response/product_response.dart';\r\n-import 'package:gypsy/screen/home/open_container.dart';\r\n-import 'package:gypsy/screen/home/product_tile.dart';\r\n-import 'package:staggered_grid_view_flutter/widgets/staggered_grid_view.dart';\r\n-import 'package:staggered_grid_view_flutter/widgets/staggered_tile.dart';\r\n \r\n+\r\n class CategoryScreen extends StatefulWidget {\r\n   final String recievedCategoryId;\r\n   final String recievedCategoryName;\r\n \r\n"
                },
                {
                    "date": 1675874116068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,20 @@\n \r\n \r\n-class CategoryScreen extends StatefulWidget {\r\n+class FoodCategoryScreen extends StatefulWidget {\r\n   final String recievedCategoryId;\r\n   final String recievedCategoryName;\r\n \r\n-  const CategoryScreen(\r\n+  const FoodCategoryScreen(\r\n       {required this.recievedCategoryId,\r\n       super.key,\r\n       required this.recievedCategoryName});\r\n \r\n   @override\r\n-  State<CategoryScreen> createState() => _CategoryScreenState();\r\n+  State<FoodCategoryScreen> createState() => _CategoryScreenState();\r\n }\r\n \r\n-class _CategoryScreenState extends State<CategoryScreen> {\r\n+class _CategoryScreenState extends State<FoodCategoryScreen> {\r\n   String categoryId = \"\";\r\n \r\n   @override\r\n   void initState() {\r\n"
                },
                {
                    "date": 1675874169956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n \r\n \r\n+import 'package:flutter/material.dart';\r\n+\r\n class FoodCategoryScreen extends StatefulWidget {\r\n   final String recievedCategoryId;\r\n   final String recievedCategoryName;\r\n \r\n"
                },
                {
                    "date": 1675874640512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n   }\r\n \r\n   String imageUrl =\r\n       \"https://assets-api.kathmandupost.com/thumb.php?src=https://assets-cdn.kathmandupost.com/uploads/source/news/2022/opinion/shutterstock1358850531-1642092669.jpg&w=900&height=601\";\r\n-  List<> originalProductList = [];\r\n+  List<F> originalProductList = [];\r\n   List<Product> searchedProductList = [];\r\n   final TextEditingController _searchController = TextEditingController();\r\n \r\n   void _searchProduct(String searchTypedText) {\r\n"
                },
                {
                    "date": 1675874648996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,160 @@\n+\r\n+\r\n+import 'package:flutter/material.dart';\r\n+import 'package:foodex_app/model/export_model.dart';\r\n+\r\n+class FoodCategoryScreen extends StatefulWidget {\r\n+  final String recievedCategoryId;\r\n+  final String recievedCategoryName;\r\n+\r\n+  const FoodCategoryScreen(\r\n+      {required this.recievedCategoryId,\r\n+      super.key,\r\n+      required this.recievedCategoryName});\r\n+\r\n+  @override\r\n+  State<FoodCategoryScreen> createState() => _CategoryScreenState();\r\n+}\r\n+\r\n+class _CategoryScreenState extends State<FoodCategoryScreen> {\r\n+  String categoryId = \"\";\r\n+\r\n+  @override\r\n+  void initState() {\r\n+    categoryId = widget.recievedCategoryId;\r\n+    print(\"The recieved category Id:-->$categoryId\");\r\n+    super.initState();\r\n+  }\r\n+\r\n+  String imageUrl =\r\n+      \"https://assets-api.kathmandupost.com/thumb.php?src=https://assets-cdn.kathmandupost.com/uploads/source/news/2022/opinion/shutterstock1358850531-1642092669.jpg&w=900&height=601\";\r\n+  List<Food> originalProductList = [];\r\n+  List<Food> searchedProductList = [];\r\n+  final TextEditingController _searchController = TextEditingController();\r\n+\r\n+  void _searchProduct(String searchTypedText) {\r\n+    List<Product> searchResultFound = [];\r\n+    if (searchTypedText.isNotEmpty) {\r\n+      searchResultFound = originalProductList.where((product) {\r\n+        String productNameInSmallCase = product.productName.toLowerCase();\r\n+        String searchTypedTextInSmallCase = searchTypedText.toLowerCase();\r\n+        return productNameInSmallCase.contains(searchTypedTextInSmallCase);\r\n+      }).toList();\r\n+    } else {\r\n+      searchResultFound = originalProductList;\r\n+      print(\"The all data is:-->$searchResultFound\");\r\n+    }\r\n+    setState(() {\r\n+      searchedProductList = searchResultFound;\r\n+    });\r\n+  }\r\n+\r\n+  FutureBuilder<ProductResponse?> getAllCategoryProduct(String categoryId) {\r\n+    return FutureBuilder<ProductResponse?>(\r\n+      future: ProductRepository().getAllCategoryProduct(categoryId),\r\n+      builder: (context, snapshot) {\r\n+        if (snapshot.hasData && snapshot.data!.data!.isNotEmpty) {\r\n+          List<Product>? productList = snapshot.data!.data;\r\n+          originalProductList = productList!;\r\n+          if (searchedProductList.isEmpty) {\r\n+            searchedProductList = productList;\r\n+          }\r\n+          print(\"The search product list: ${searchedProductList.length}\");\r\n+          return StaggeredGridView.countBuilder(\r\n+            staggeredTileBuilder: (index) => const StaggeredTile.fit(1),\r\n+            crossAxisCount: 2,\r\n+            crossAxisSpacing: 3, //horizontal spacing\r\n+            mainAxisSpacing: 3, //vertical ---- spacing\r\n+            itemCount: searchedProductList.length,\r\n+            itemBuilder: (context, index) {\r\n+              // Widget ko meaning --> my creative design\r\n+              return OpenContainerWrapper(\r\n+                  product: searchedProductList[index],\r\n+                  child: ProductTile(\r\n+                    searchedProductList[index],\r\n+                  ));\r\n+            },\r\n+          );\r\n+        } else {\r\n+          return const Center(\r\n+            child: CircularProgressIndicator(),\r\n+          );\r\n+        }\r\n+      },\r\n+    );\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Scaffold(\r\n+      appBar: AppBar(\r\n+        title: Text(widget.recievedCategoryName),\r\n+        centerTitle: true,\r\n+        backgroundColor: const Color(0XFFFC6011),\r\n+      ),\r\n+      body: SafeArea(\r\n+          child: Column(\r\n+        children: [\r\n+          const Padding(\r\n+            padding: EdgeInsets.only(left: 20),\r\n+          ),\r\n+          const SizedBox(height: 8),\r\n+          const SizedBox(height: 10.0),\r\n+          FadeInUp(\r\n+            delay: const Duration(milliseconds: 50),\r\n+            child: Padding(\r\n+              padding: EdgeInsets.symmetric(\r\n+                  horizontal: MediaQuery.of(context).size.width * 0.03),\r\n+              child: SizedBox(\r\n+                width: MediaQuery.of(context).size.width,\r\n+                height: MediaQuery.of(context).size.height * 0.07,\r\n+                child: Center(\r\n+                  child: TextField(\r\n+                    controller: _searchController,\r\n+                    onChanged: (newTypedValueInSearchBox) {\r\n+                      _searchProduct(newTypedValueInSearchBox);\r\n+                    },\r\n+                    style: Theme.of(context)\r\n+                        .textTheme\r\n+                        .displaySmall\r\n+                        ?.copyWith(fontSize: 15, fontWeight: FontWeight.w400),\r\n+                    decoration: InputDecoration(\r\n+                      contentPadding: const EdgeInsets.symmetric(\r\n+                          vertical: 0, horizontal: 20),\r\n+                      filled: true,\r\n+                      prefixIcon: const Icon(Icons.search),\r\n+                      suffixIcon: IconButton(\r\n+                        onPressed: () {\r\n+                          FocusManager.instance.primaryFocus?.unfocus();\r\n+                          setState(() {\r\n+                            _searchController.clear();\r\n+                            _searchProduct(\"\");\r\n+                            // itemsOnSearch = mainList;\r\n+                          });\r\n+                        },\r\n+                        icon: const Icon(Icons.close_sharp),\r\n+                      ),\r\n+                      hintStyle:\r\n+                          Theme.of(context).textTheme.displaySmall?.copyWith(\r\n+                                fontSize: 15,\r\n+                                fontWeight: FontWeight.w400,\r\n+                                color: const Color.fromARGB(255, 100, 88, 88),\r\n+                              ),\r\n+                      hintText: \"Search for ${widget.recievedCategoryName}\",\r\n+                      border: OutlineInputBorder(\r\n+                        borderSide: BorderSide.none,\r\n+                        borderRadius: BorderRadius.circular(10),\r\n+                      ),\r\n+                    ),\r\n+                  ),\r\n+                ),\r\n+              ),\r\n+            ),\r\n+          ),\r\n+          const SizedBox(height: 8.0),\r\n+          Expanded(child: getAllCategoryProduct(categoryId)),\r\n+        ],\r\n+      )),\r\n+    );\r\n+  }\r\n+}\r\n"
                }
            ],
            "date": 1675874039116,
            "name": "Commit-0",
            "content": "import 'package:animate_do/animate_do.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:gypsy/model/product.dart';\r\nimport 'package:gypsy/repository/product_repository.dart';\r\nimport 'package:gypsy/response/product_response.dart';\r\nimport 'package:gypsy/screen/home/open_container.dart';\r\nimport 'package:gypsy/screen/home/product_tile.dart';\r\nimport 'package:staggered_grid_view_flutter/widgets/staggered_grid_view.dart';\r\nimport 'package:staggered_grid_view_flutter/widgets/staggered_tile.dart';\r\n\r\nclass CategoryScreen extends StatefulWidget {\r\n  final String recievedCategoryId;\r\n  final String recievedCategoryName;\r\n\r\n  const CategoryScreen(\r\n      {required this.recievedCategoryId,\r\n      super.key,\r\n      required this.recievedCategoryName});\r\n\r\n  @override\r\n  State<CategoryScreen> createState() => _CategoryScreenState();\r\n}\r\n\r\nclass _CategoryScreenState extends State<CategoryScreen> {\r\n  String categoryId = \"\";\r\n\r\n  @override\r\n  void initState() {\r\n    categoryId = widget.recievedCategoryId;\r\n    print(\"The recieved category Id:-->$categoryId\");\r\n    super.initState();\r\n  }\r\n\r\n  String imageUrl =\r\n      \"https://assets-api.kathmandupost.com/thumb.php?src=https://assets-cdn.kathmandupost.com/uploads/source/news/2022/opinion/shutterstock1358850531-1642092669.jpg&w=900&height=601\";\r\n  List<Product> originalProductList = [];\r\n  List<Product> searchedProductList = [];\r\n  final TextEditingController _searchController = TextEditingController();\r\n\r\n  void _searchProduct(String searchTypedText) {\r\n    List<Product> searchResultFound = [];\r\n    if (searchTypedText.isNotEmpty) {\r\n      searchResultFound = originalProductList.where((product) {\r\n        String productNameInSmallCase = product.productName.toLowerCase();\r\n        String searchTypedTextInSmallCase = searchTypedText.toLowerCase();\r\n        return productNameInSmallCase.contains(searchTypedTextInSmallCase);\r\n      }).toList();\r\n    } else {\r\n      searchResultFound = originalProductList;\r\n      print(\"The all data is:-->$searchResultFound\");\r\n    }\r\n    setState(() {\r\n      searchedProductList = searchResultFound;\r\n    });\r\n  }\r\n\r\n  FutureBuilder<ProductResponse?> getAllCategoryProduct(String categoryId) {\r\n    return FutureBuilder<ProductResponse?>(\r\n      future: ProductRepository().getAllCategoryProduct(categoryId),\r\n      builder: (context, snapshot) {\r\n        if (snapshot.hasData && snapshot.data!.data!.isNotEmpty) {\r\n          List<Product>? productList = snapshot.data!.data;\r\n          originalProductList = productList!;\r\n          if (searchedProductList.isEmpty) {\r\n            searchedProductList = productList;\r\n          }\r\n          print(\"The search product list: ${searchedProductList.length}\");\r\n          return StaggeredGridView.countBuilder(\r\n            staggeredTileBuilder: (index) => const StaggeredTile.fit(1),\r\n            crossAxisCount: 2,\r\n            crossAxisSpacing: 3, //horizontal spacing\r\n            mainAxisSpacing: 3, //vertical ---- spacing\r\n            itemCount: searchedProductList.length,\r\n            itemBuilder: (context, index) {\r\n              // Widget ko meaning --> my creative design\r\n              return OpenContainerWrapper(\r\n                  product: searchedProductList[index],\r\n                  child: ProductTile(\r\n                    searchedProductList[index],\r\n                  ));\r\n            },\r\n          );\r\n        } else {\r\n          return const Center(\r\n            child: CircularProgressIndicator(),\r\n          );\r\n        }\r\n      },\r\n    );\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: Text(widget.recievedCategoryName),\r\n        centerTitle: true,\r\n        backgroundColor: const Color(0XFFFC6011),\r\n      ),\r\n      body: SafeArea(\r\n          child: Column(\r\n        children: [\r\n          const Padding(\r\n            padding: EdgeInsets.only(left: 20),\r\n          ),\r\n          const SizedBox(height: 8),\r\n          const SizedBox(height: 10.0),\r\n          FadeInUp(\r\n            delay: const Duration(milliseconds: 50),\r\n            child: Padding(\r\n              padding: EdgeInsets.symmetric(\r\n                  horizontal: MediaQuery.of(context).size.width * 0.03),\r\n              child: SizedBox(\r\n                width: MediaQuery.of(context).size.width,\r\n                height: MediaQuery.of(context).size.height * 0.07,\r\n                child: Center(\r\n                  child: TextField(\r\n                    controller: _searchController,\r\n                    onChanged: (newTypedValueInSearchBox) {\r\n                      _searchProduct(newTypedValueInSearchBox);\r\n                    },\r\n                    style: Theme.of(context)\r\n                        .textTheme\r\n                        .displaySmall\r\n                        ?.copyWith(fontSize: 15, fontWeight: FontWeight.w400),\r\n                    decoration: InputDecoration(\r\n                      contentPadding: const EdgeInsets.symmetric(\r\n                          vertical: 0, horizontal: 20),\r\n                      filled: true,\r\n                      prefixIcon: const Icon(Icons.search),\r\n                      suffixIcon: IconButton(\r\n                        onPressed: () {\r\n                          FocusManager.instance.primaryFocus?.unfocus();\r\n                          setState(() {\r\n                            _searchController.clear();\r\n                            _searchProduct(\"\");\r\n                            // itemsOnSearch = mainList;\r\n                          });\r\n                        },\r\n                        icon: const Icon(Icons.close_sharp),\r\n                      ),\r\n                      hintStyle:\r\n                          Theme.of(context).textTheme.displaySmall?.copyWith(\r\n                                fontSize: 15,\r\n                                fontWeight: FontWeight.w400,\r\n                                color: const Color.fromARGB(255, 100, 88, 88),\r\n                              ),\r\n                      hintText: \"Search for ${widget.recievedCategoryName}\",\r\n                      border: OutlineInputBorder(\r\n                        borderSide: BorderSide.none,\r\n                        borderRadius: BorderRadius.circular(10),\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ),\r\n              ),\r\n            ),\r\n          ),\r\n          const SizedBox(height: 8.0),\r\n          Expanded(child: getAllCategoryProduct(categoryId)),\r\n        ],\r\n      )),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}